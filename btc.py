from telethon import TelegramClient, events, sync
import re
import config as cfg
from telethon.tl.functions.messages import GetBotCallbackAnswerRequest
api_id = cfg.api_id
api_hash = cfg.api_hash
regex = r"BTC_CHANGE_BOT\?start="
idchat = cfg.idchat
client = TelegramClient('session', api_id, api_hash)
username = cfg.username
print('Enabled –õ–æ–≤–ª–µ—Ä —á–µ–∫–æ–≤? [Yes]')

@client.on(events.NewMessage([159405177, idchat], blacklist_chats=True))
async def normal_handler(event):
    user_mess = event.message.to_dict()['message']
    m_from = event.message.to_dict()
    if re.search(r'BTC_CHANGE_BOT\?start=', user_mess):
        m = re.search(r'c_\S+', user_mess)
        sex = m.group(0)
        if re.search(r' ', user_mess):
            n = re.search(r' \S+', user_mess)
            reg = re.compile('[^a-zA-Z0-9_]')
            genius = (reg.sub('', m.group(0)))
            genius2 = (reg.sub('', n.group(0)))
            await client.send_message('BTC_CHANGE_BOT', '/start ' + genius + genius2)
            await client.send_message(idchat, 'üßπ –ß–µ–∫ –±—ã–ª `–æ—á–∏—â–µ–Ω` –æ—Ç —Ä—É—Å—Å–∫–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤ –∏ –ø—Ä–æ–±–µ–ª–æ–≤: ' + genius + genius2)
        elif len(sex) > 35:
            reg = re.compile('[^a-zA-Z0-9_]')
            genius = (reg.sub('', m.group(0)))
            await client.send_message('BTC_CHANGE_BOT', '/start ' + genius)
            await client.send_message(idchat, 'üßπ –ß–µ–∫ –±—ã–ª `–æ—á–∏—â–µ–Ω` –æ—Ç —Ä—É—Å—Å–∫–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤ –∏ –ø—Ä–æ—á–µ–≥–æ: ' + genius)
        elif len(m.group(0)) == 34 or len(m.group(0)) == 35:
            await client.send_message('BTC_CHANGE_BOT', '/start ' + m.group(0))
        else:
            await client.send_message('BTC_CHANGE_BOT', '/start ' + m.group(0))


@client.on(events.NewMessage(chats='BTC_CHANGE_BOT'))
async def withdraw(event):
    if "–ö–æ—à–µ–ª–µ–∫ BTC" in event.raw_text:
        balance = event.raw_text.replace('\n', ' ').split('–ë–∞–ª–∞–Ω—Å:')[-1].split()[0]
        if balance == '0':
            return
        else:
            await client(GetBotCallbackAnswerRequest(
                event.to_id,
                event.id,
                data=event.reply_markup.rows[1].buttons[0].data
            ))
    elif '–í—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å —á–µ–∫' in event.raw_text:
        await client(GetBotCallbackAnswerRequest(
            event.to_id,
            event.id,
            data=event.reply_markup.rows[0].buttons[0].data
        ))
    elif event.raw_text == "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É":
        await client(GetBotCallbackAnswerRequest(
            event.to_id,
            event.id,
            data=event.reply_markup.rows[0].buttons[0].data
        ))
    elif '–ù–∞ –∫–∞–∫—É—é —Å—É–º–º—É BTC –≤—ã–ø–∏—Å–∞—Ç—å —á–µ–∫? ' in event.raw_text:
        balance = event.raw_text.split('–î–æ—Å—Ç—É–ø–Ω–æ:')[-1].split()[0]
        await client.send_message('BTC_CHANGE_BOT', balance)
    elif 'BTC_CHANGE_BOT?start=' in event.raw_text:
        check = event.raw_text.split('https://')[-1].split()[0]
        await client.send_message(username, check)


@client.on(events.NewMessage(chats='BTC_CHANGE_BOT'))
async def btc_handler(event):
    user_mess = event.message.to_dict()['message']
    print(user_mess)
    if re.search(r'–í—ã –ø–æ–ª—É—á–∏–ª–∏', user_mess):
        k = re.search(r'–í—ã –ø–æ–ª—É—á–∏–ª–∏ \S+', user_mess)
        v = re.search(r' BTC \S+', user_mess)
        await client.send_message(idchat,'**‚úÖ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω —á–µ–∫: ** ' + k.group(0) + v.group(0) + ') –†–£–ë')
        await event.respond('üíº –ö–æ—à–µ–ª–µ–∫')
    elif re.search(r'–£–ø—Å', user_mess):
        await client.send_message(idchat,'**üóëÔ∏è –ü–æ–π–º–∞–Ω –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π —á–µ–∫.** __[–ú—É—Å–æ—Ä]__ ')
    elif re.search(r'–ë–∞–ª–∞–Ω—Å', user_mess):
        j = re.search(r'–ë–∞–ª–∞–Ω—Å: \S+', user_mess)
        h = re.search(r'–ü—Ä–∏–º–µ—Ä–Ω–æ: \S+', user_mess)
        await client.send_message(idchat, '' + j.group(0) + '** BTC**' + '\n' + h.group(0) + '** RUB**')
    elif re.search(r'–æ–±–Ω–∞–ª–∏—á–∏–ª —á–µ–∫', user_mess):
        o = re.search(r'–Ω–∞ \S+', user_mess)
        await client.send_message(idchat, 'üí∏ –í—ã–≤–æ–¥ –ø—Ä–æ–∏–∑–æ—à—ë–ª **—É—Å–ø–µ—à–Ω–æ**. –°—É–º–º–∞: ' + o.group(0) + ' **BTC**')


@client.on(events.NewMessage(chats=idchat))
async def logger(event):
    user_mess = event.message.to_dict()['message']
    if re.search(r'/help', user_mess):
        await client.send_message(idchat, 'üìï –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:' + '\n-- /balance' + '\n -- /')
    elif re.search(r'/balance', user_mess):
        await client.send_message('BTC_CHANGE_BOT', 'üíº –ö–æ—à–µ–ª–µ–∫')


client.start()
client.run_until_disconnected()
print('–í—ã–∫–ª—é—á–µ–Ω–∏–µ\n3...\n2...\n1...\n  ')